stages:
  - unit-test
  - build
  - test
  - release

unit-test:
  stage: unit-test
  image: python:3.6
  script:
    - echo "Testing application code..."
    - pip install -r requirements.txt -r requirements-test.txt
    - python -m unittest discover -s tests/
    - coverage run -m unittest discover -s tests/
    - coverage report --include ui/ui.py
  only:
   - branches

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "Building and pushing Dockerfile-based application..."
    - /kaniko/executor
      --cache=true
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
  only:
   - branches

test:
  stage: test
  variables:
    GIT_STRATEGY: none
  script:
    - env
    - exit 0
  only:
    - branches

release:
  stage: release
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  script:
    - echo "Updating docker images..."
    - crane auth login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - VTAG=$(cat VERSION)
    - for CVTAG in ${VTAG} latest; do crane tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} ${CVTAG}; done
  only:
    - main
